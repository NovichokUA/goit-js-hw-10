{"version":3,"file":"commonHelpers2.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nlet timerDays = document.querySelector('[data-days]');\nlet timerHours = document.querySelector('[data-hours]');\nlet timerMinutes = document.querySelector('[data-minutes]');\nlet timerSeconds = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    startBtn.disabled = false;\n    console.log(selectedDates[0]);\n    startBtn.addEventListener('click', startCounter);\n    if (selectedDates[0] < Date.now()) {\n      alert('Please choose a date in the future');\n      startBtn.disabled = true;\n      return;\n    } else if (event.target.nodeName !== 'button') {\n      return;\n    } else {\n      startCounter();\n    }\n\n    function startCounter(event) {\n      startBtn.disabled = true;\n      inputDate.disabled = true;\n      let intervalId = null;\n\n      intervalId = setInterval(() => {\n        let time = selectedDates[0];\n\n        let currentTime = Date.now();\n\n        let deltaTime = time - currentTime;\n\n        if (deltaTime <= 0) {\n          clearInterval(intervalId);\n          intervalId = null;\n          inputDate.disabled = false;\n          startBtn.disabled = false;\n          return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(deltaTime);\n        timerDays.textContent = pad(days);\n        timerHours.textContent = pad(hours);\n        timerMinutes.textContent = pad(minutes);\n        timerSeconds.textContent = pad(seconds);\n      }, 1000);\n    }\n  },\n};\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst fp = flatpickr(inputDate, options);\n"],"names":["inputDate","startBtn","timerDays","timerHours","timerMinutes","timerSeconds","options","selectedDates","startCounter","event","intervalId","time","currentTime","deltaTime","days","hours","minutes","seconds","convertMs","pad","value","ms","flatpickr"],"mappings":"oGAGA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EACtD,IAAIC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE1DJ,EAAS,SAAW,GAEpB,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAIrB,GAHAN,EAAS,SAAW,GACpB,QAAQ,IAAIM,EAAc,EAAE,EAC5BN,EAAS,iBAAiB,QAASO,CAAY,EAC3CD,EAAc,GAAK,KAAK,IAAG,EAAI,CACjC,MAAM,oCAAoC,EAC1CN,EAAS,SAAW,GACpB,MACD,KAAM,IAAI,MAAM,OAAO,WAAa,SACnC,OAEAO,IAGF,SAASA,EAAaC,EAAO,CAC3BR,EAAS,SAAW,GACpBD,EAAU,SAAW,GACrB,IAAIU,EAAa,KAEjBA,EAAa,YAAY,IAAM,CAC7B,IAAIC,EAAOJ,EAAc,GAErBK,EAAc,KAAK,MAEnBC,EAAYF,EAAOC,EAEvB,GAAIC,GAAa,EAAG,CAClB,cAAcH,CAAU,EACxBA,EAAa,KACbV,EAAU,SAAW,GACrBC,EAAS,SAAW,GACpB,MACD,CAED,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAS,EAC7DX,EAAU,YAAciB,EAAIL,CAAI,EAChCX,EAAW,YAAcgB,EAAIJ,CAAK,EAClCX,EAAa,YAAce,EAAIH,CAAO,EACtCX,EAAa,YAAcc,EAAIF,CAAO,CACvC,EAAE,GAAI,CACR,CACF,CACH,EAEA,SAASE,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEWK,EAAUtB,EAAWM,CAAO"}